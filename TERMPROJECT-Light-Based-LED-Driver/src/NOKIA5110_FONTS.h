// *************************************************************** 
// NOKIA5110_FONTS.h
// Library for the font family of Nokia 5110 LCD
// Retrieved from couple of sources:
// https://github.com/gavinlyonsrepo/NOKIA5110_TEXT
// LCD creator / LCD assistant http://www.instructables.com/id/Nokia-5110-graphics-tutorial/
// https://maxpromer.github.io/LCD-Character-Creator/
// https://github.com/nitins11/Nokia5110LCD/blob/master/src/Nokia5110.h
// https://github.com/platisd/nokia-5110-lcd-library/tree/master/examples/Nokia_LCD_Font
// @author: ozgurgulsuna
// Created on 1/2/2023
//*************************************************************** 

// Definitions
#define NOKIA5110_FONT_Thick
//#define NOKIA5110_FONT_Wide
//#define NOKIA5110_FONT_Large
//#define NOKIA5110_FONT_HomeSpun
//#define NOKIA5110_FONT_Glyphs_LCD
//#define NOKIA5110_FONT_Bold_LCD
//#define NOKIA5110_FONT_Small_LCD
//#define NOKIA5110_FONT_Terminal6x8
//#define NOKIA5110_FONT_Terminal11x16


// Fonts and Background image
static unsigned char NOKIA_DICK[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xE0, 0x70, 0x70, 0x30, 0x30, 0x38, 0x18, 0x18, 0x1C, 0x0C, 0x0C,
0x0E, 0x06, 0x06, 0x07, 0x03, 0x03, 0x03, 0x83, 0x83, 0x83, 0xC3, 0xC3, 0xC3, 0xE3, 0xF3, 0x77,
0x3E, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0x38, 0x18, 0x1C, 0x0E, 0x06, 0x07, 0x83, 0x83, 0x03, 0x03,
0x03, 0x03, 0x07, 0x0E, 0xFC, 0xF8, 0xC0, 0x00, 0x80, 0x80, 0xC0, 0xE0, 0x60, 0x70, 0x30, 0x38,
0x1C, 0x0C, 0x0C, 0x0E, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
0x00, 0x00, 0x80, 0xE0, 0xFC, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x01, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00,
0xC1, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x07, 0x03, 0x03, 0x01, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0x60, 0x70, 0x30,
0x38, 0x18, 0x1C, 0x0C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1E, 0x38, 0x70, 0xE0, 0xC0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
0x18, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0xF0, 0xF0, 0xB0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18,
0x18, 0x18, 0x1C, 0x0C, 0x0C, 0x0E, 0x06, 0x06, 0x06, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x7C, 0x70, 0x60,
0x60, 0x60, 0xE3, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xF0, 0x7F, 0x1F, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

const unsigned char nokia [] = {
0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80,
0x00, 0x00, 0x80, 0x80, 0x40, 0x40, 0x40, 0x80, 0x80, 0xC0, 0xC0, 0x40, 0xC0, 0xA0, 0xE0, 0xC0,
0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0xFE, 0xEE, 0xEE, 0xF4, 0xF0, 0xF0, 0x70,
0x30, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x0C, 0x9C, 0x1C, 0x38, 0xB8, 0x38, 0x38, 0xB8, 0xF8,
0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
0xF0, 0xF0, 0xF8, 0xF8, 0x88, 0x20, 0x8A, 0x20, 0x08, 0x22, 0x08, 0x00, 0x0A, 0x00, 0x00, 0x02,
0x80, 0x71, 0xBA, 0xDA, 0xFD, 0xDD, 0xED, 0xDE, 0xEE, 0xF7, 0xFF, 0xFB, 0xFD, 0xFD, 0xFE, 0xFF,
0x7F, 0x3F, 0x1F, 0x9F, 0x3F, 0x7F, 0x6F, 0x0F, 0xAF, 0x1F, 0xBF, 0x3E, 0x3C, 0x7A, 0x78, 0x78,
0x70, 0x22, 0x88, 0xA0, 0x2A, 0x80, 0x08, 0x62, 0xE0, 0xE0, 0xF2, 0xF0, 0x58, 0xDA, 0xF8, 0xFC,
0x92, 0xFE, 0xFF, 0xFF, 0xD3, 0xFF, 0xFF, 0xFF, 0xF3, 0xF1, 0xF9, 0xFF, 0xFF, 0xBF, 0xBF, 0xAF,
0x6F, 0xCF, 0xAF, 0x0F, 0x4F, 0xA7, 0x0F, 0xAF, 0x82, 0x80, 0x20, 0xC0, 0x80, 0x80, 0x50, 0x40,
0xC4, 0xD0, 0xA0, 0xE8, 0xE4, 0xEA, 0xFF, 0xFB, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x4F,
0x27, 0x53, 0xA8, 0x54, 0x29, 0x4A, 0xB5, 0x82, 0xAC, 0xA1, 0x8A, 0xB6, 0x50, 0x4D, 0x32, 0xA4,
0x4A, 0xB4, 0xA9, 0xA9, 0x4A, 0x52, 0xB4, 0xAA, 0x45, 0xA8, 0xDA, 0x22, 0xAC, 0xD2, 0x2A, 0x52,
0xA8, 0x52, 0x4C, 0xB0, 0xAD, 0x43, 0x5B, 0xB3, 0x45, 0xE9, 0xFB, 0xFB, 0xAB, 0xFF, 0xFD, 0xFA,
0x56, 0xFD, 0xFF, 0xFE, 0xE9, 0xFF, 0xBE, 0xEC, 0x59, 0x5A, 0xA2, 0x54, 0xFC, 0xFF, 0xFF, 0xFC,
0xFB, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0x7F, 0x7F, 0xFF, 0xBF, 0x7F, 0xBF, 0xBF, 0xFF, 0xBF, 0xFF,
0xBF, 0x5F, 0xFF, 0xDC, 0x1C, 0xE3, 0xDC, 0xDC, 0x33, 0xEF, 0xD4, 0xBB, 0x64, 0xDC, 0xAB, 0xF4,
0xAF, 0x58, 0xEB, 0xB7, 0xDB, 0xAB, 0xF4, 0xAF, 0x58, 0xF7, 0xCB, 0xBC, 0x53, 0xEF, 0xBF, 0xEF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xBD, 0x7F, 0xD3, 0xAB, 0xDF, 0x73, 0xAC, 0xDB,
0xD7, 0xFF, 0xFB, 0xEF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0xC3, 0x83, 0x03, 0x07, 0x0B, 0x1F, 0x3B,
0x5F, 0xFD, 0x03, 0x01, 0x03, 0x02, 0xFF, 0xFD, 0x07, 0x02, 0x03, 0x01, 0xE3, 0xE1, 0xE3, 0xE2,
0xE3, 0xE2, 0x63, 0xE2, 0x03, 0x03, 0x02, 0x07, 0xFD, 0xFF, 0x02, 0x02, 0x03, 0x03, 0x02, 0x7D,
0x37, 0x1A, 0x0F, 0x06, 0x83, 0xC3, 0xE2, 0xF3, 0xDA, 0xFF, 0xFE, 0x01, 0x03, 0x02, 0x03, 0xFF,
0xFF, 0xF6, 0xFD, 0x7B, 0x1F, 0x07, 0x03, 0xE3, 0xE3, 0xE3, 0x03, 0x02, 0x17, 0x1D, 0xF7, 0xDE,
0xFD, 0xF7, 0xDD, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF,
0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xF0, 0xE0, 0xE0, 0xE0,
0xE3, 0xE3, 0xE3, 0xE2, 0xE3, 0xE3, 0xE3, 0xE3, 0xE0, 0xE0, 0xE0, 0xF0, 0xFF, 0xFF, 0xE0, 0xE0,
0xE0, 0xE0, 0xE0, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xE1, 0xE3, 0xE7, 0xFE, 0xFF, 0xFF, 0xE0,
0xE0, 0xE0, 0xE0, 0xFF, 0xE7, 0xE7, 0xE1, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8,
0xF0, 0xE0, 0xE1, 0xE3, 0xEF, 0xFF, 0xFF, 0xFF, 
};


#ifdef NOKIA5110_FONT_Wide

// ASCII font file : Number five Wide font 8 by 8 
// Define the ASCII table as Data array
// cols left to right 0x00 is  off 0xFF is all on 
// Each character is in a 10 by 8 bit pixel box 

const unsigned char FontWide[59][8] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //  
    {0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00}, // !
    {0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, // "
    {0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x00, 0x00, 0x00}, // #
    {0x24, 0x2a, 0x2a, 0x7f, 0x2a, 0x2a, 0x12, 0x00}, // $
    {0x00, 0x47, 0x25, 0x17, 0x08, 0x74, 0x52, 0x71}, // %
    {0x00, 0x36, 0x49, 0x49, 0x49, 0x41, 0x41, 0x38}, // &
    {0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, // '
    {0x00, 0x3e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00}, // (
    {0x41, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // )
    {0x04, 0x15, 0x0e, 0x15, 0x04, 0x00, 0x00, 0x00}, // *
    {0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00, 0x00}, // +
    {0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00}, // ,
    {0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}, // -
    {0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // .
    {0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00}, // /
    {0x00, 0x3e, 0x61, 0x51, 0x49, 0x45, 0x43, 0x3e}, // 0
    {0x00, 0x00, 0x01, 0x01, 0x7e, 0x00, 0x00, 0x00}, // 1
    {0x00, 0x71, 0x49, 0x49, 0x49, 0x49, 0x49, 0x46}, // 2
    {0x41, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00}, // 3
    {0x00, 0x0f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x7f}, // 4
    {0x00, 0x4f, 0x49, 0x49, 0x49, 0x49, 0x49, 0x31}, // 5
    {0x00, 0x3e, 0x49, 0x49, 0x49, 0x49, 0x49, 0x30}, // 6
    {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x7e, 0x00}, // 7
    {0x00, 0x36, 0x49, 0x49, 0x49, 0x49, 0x49, 0x36}, // 8
    {0x00, 0x06, 0x49, 0x49, 0x49, 0x49, 0x49, 0x3e}, // 9
    {0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00}, // :
    {0x00, 0x34, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00}, // ;
    {0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00}, // <
    {0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00}, // =
    {0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00}, // >
    {0x00, 0x06, 0x01, 0x01, 0x59, 0x09, 0x09, 0x06}, // ?
    {0x00, 0x3e, 0x41, 0x5d, 0x55, 0x5d, 0x51, 0x5e}, // @
    {0x00, 0x7e, 0x01, 0x09, 0x09, 0x09, 0x09, 0x7e}, // A
    {0x00, 0x7f, 0x41, 0x49, 0x49, 0x49, 0x49, 0x36}, // B
    {0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x22}, // C
    {0x00, 0x7f, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e}, // D
    {0x00, 0x3e, 0x49, 0x49, 0x49, 0x49, 0x49, 0x41}, // E
    {0x00, 0x7e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01}, // F
    {0x00, 0x3e, 0x41, 0x49, 0x49, 0x49, 0x49, 0x79}, // G
    {0x00, 0x7f, 0x08, 0x08, 0x08, 0x08, 0x08, 0x7f}, // H
    {0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00}, // I
    {0x00, 0x38, 0x40, 0x40, 0x41, 0x41, 0x41, 0x3f}, // J
    {0x00, 0x7f, 0x08, 0x08, 0x08, 0x0c, 0x0a, 0x71}, // K
    {0x00, 0x3f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40}, // L
    {0x00, 0x7e, 0x01, 0x01, 0x7e, 0x01, 0x01, 0x7e}, // M
    {0x00, 0x7e, 0x01, 0x01, 0x3e, 0x40, 0x40, 0x3f}, // N
    {0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e}, // O
    {0x00, 0x7e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x06}, // P
    {0x00, 0x3e, 0x41, 0x41, 0x71, 0x51, 0x51, 0x7e}, // Q
    {0x00, 0x7e, 0x01, 0x31, 0x49, 0x49, 0x49, 0x46}, // R
    {0x00, 0x46, 0x49, 0x49, 0x49, 0x49, 0x49, 0x31}, // S
    {0x01, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x01, 0x00}, // T
    {0x00, 0x3f, 0x40, 0x40, 0x40, 0x40, 0x40, 0x3f}, // U
    {0x00, 0x0f, 0x10, 0x20, 0x40, 0x20, 0x10, 0x0f}, // V
    {0x00, 0x3f, 0x40, 0x40, 0x3f, 0x40, 0x40, 0x3f}, // W
    {0x00, 0x63, 0x14, 0x08, 0x08, 0x08, 0x14, 0x63}, // X
    {0x00, 0x07, 0x08, 0x08, 0x78, 0x08, 0x08, 0x07}, // Y
    {0x00, 0x71, 0x49, 0x49, 0x49, 0x49, 0x49, 0x47}, // Z
};
#endif //end of wide

#ifdef NOKIA5110_FONT_Thick

// ASCII font file : Thick Font 7 by 8 
// Define the ASCII table as Data array
// cols left to right 0x00 is  off 0xFF is all on
// Each character is 7 bytes wide one byte height. 
// so ! is 0x5f,0x5f,0x00,0x00,0x00,0x00,0x00,0x00 , 
// Also the code adds two blank lines on LHS and RHS side 
// Each character is in a 9 by 8 bit pixel box.

const unsigned char FontThick[60][7] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //  
    {0x5f, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00}, // !
    {0x07, 0x07, 0x00, 0x07, 0x07, 0x00, 0x00}, // "
    {0x14, 0x7f, 0x7f, 0x14, 0x7f, 0x7f, 0x14}, // #
    {0x6f, 0x6f, 0x6b, 0xeb, 0x6b, 0x7b, 0x7b}, // $
    {0x63, 0x73, 0x38, 0x1c, 0x0e, 0x67, 0x63}, // %
    {0x7f, 0x7f, 0x6b, 0x63, 0x68, 0x78, 0x78}, // &
    {0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00}, // '
    {0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00}, // (
    {0x80, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00}, // )
    {0x36, 0x08, 0x7f, 0x7f, 0x7f, 0x08, 0x36}, // *
    {0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00}, // +
    {0xe0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00}, // ,
    {0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00}, // -
    {0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, // .
    {0x70, 0x1c, 0x07, 0x00, 0x00, 0x00, 0x00}, // /
    {0x7f, 0x7f, 0x63, 0x63, 0x63, 0x7f, 0x7f}, // 0
    {0x60, 0x66, 0x66, 0x7f, 0x7f, 0x60, 0x60}, // 1
    {0x7b, 0x7b, 0x6b, 0x6b, 0x6b, 0x6f, 0x6f}, // 2
    {0x63, 0x63, 0x6b, 0x6b, 0x6b, 0x7f, 0x7f}, // 3
    {0x1f, 0x1f, 0x18, 0x18, 0x18, 0x7e, 0x7e}, // 4
    {0x6f, 0x6f, 0x6b, 0x6b, 0x6b, 0x7b, 0x7b}, // 5
    {0x7f, 0x7f, 0x6c, 0x6c, 0x6c, 0x7c, 0x7c}, // 6
    {0x43, 0x63, 0x73, 0x3b, 0x1f, 0x0f, 0x07}, // 7
    {0x7f, 0x7f, 0x6b, 0x6b, 0x6b, 0x7f, 0x7f}, // 8
    {0x1f, 0x1f, 0x1b, 0x1b, 0x1b, 0x7f, 0x7f}, // 9
    {0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00}, // :
    {0xec, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00}, // ;
    {0x08, 0x14, 0x22, 0x22, 0x00, 0x00, 0x00}, // <
    {0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00}, // =
    {0x22, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00}, // >
    {0x03, 0x03, 0x5b, 0x5b, 0x0b, 0x0f, 0x0f}, // ?
    {0x7f, 0x7f, 0x63, 0x6f, 0x6b, 0x6f, 0x6f}, // @
    {0x7f, 0x7f, 0x1b, 0x1b, 0x1b, 0x7f, 0x7f}, // A
    {0x7f, 0x7f, 0x6b, 0x6b, 0x6f, 0x7e, 0x7c}, // B
    {0x7f, 0x7f, 0x63, 0x63, 0x63, 0x63, 0x63}, // C
    {0x7f, 0x7f, 0x63, 0x63, 0x67, 0x7e, 0x7c}, // D
    {0x7f, 0x7f, 0x6b, 0x6b, 0x6b, 0x6b, 0x6b}, // E
    {0x7f, 0x7f, 0x0b, 0x0b, 0x0b, 0x03, 0x03}, // F
    {0x7f, 0x7f, 0x63, 0x63, 0x6b, 0x7b, 0x7b}, // G
    {0x7f, 0x7f, 0x18, 0x18, 0x18, 0x7f, 0x7f}, // H
    {0x63, 0x63, 0x7f, 0x7f, 0x63, 0x63, 0x63}, // I
    {0x60, 0x60, 0x60, 0x60, 0x60, 0x7f, 0x3f}, // J
    {0x7f, 0x7f, 0x18, 0x18, 0x1e, 0x7f, 0x79}, // K
    {0x7f, 0x7f, 0x60, 0x60, 0x60, 0x60, 0x60}, // L
    {0x7f, 0x7f, 0x03, 0x06, 0x03, 0x7f, 0x7f}, // M
    {0x7f, 0x7f, 0x0e, 0x1c, 0x38, 0x7f, 0x7f}, // N
    {0x7f, 0x7f, 0x63, 0x63, 0x63, 0x7f, 0x7f}, // O
    {0x7f, 0x7f, 0x1b, 0x1b, 0x1b, 0x1f, 0x1f}, // P
    {0x7f, 0x7f, 0x63, 0xf3, 0xf3, 0x7f, 0x7f}, // Q
    {0x7f, 0x7f, 0x1b, 0x3b, 0x7b, 0x7f, 0x5f}, // R
    {0x6f, 0x6f, 0x6b, 0x6b, 0x6b, 0x7b, 0x7b}, // S
    {0x03, 0x03, 0x7f, 0x7f, 0x03, 0x03, 0x03}, // T
    {0x7f, 0x7f, 0x60, 0x60, 0x60, 0x7f, 0x7f}, // U
    {0x1f, 0x3f, 0x70, 0x60, 0x70, 0x3f, 0x1f}, // V
    {0x3f, 0x7f, 0x60, 0x30, 0x60, 0x7f, 0x3f}, // W
    {0x77, 0x7f, 0x1c, 0x08, 0x1c, 0x7f, 0x77}, // X
    {0x07, 0x0f, 0x7c, 0x78, 0x7c, 0x0f, 0x07}, // Y
    {0x73, 0x7b, 0x6b, 0x6b, 0x6b, 0x6f, 0x67}, // Z
    {0x00, 0x08, 0x1C, 0x3E, 0x77, 0x63, 0x41}, // < (bold)
};

#endif


#ifdef NOKIA5110_FONT_Large
// ASCII font file : "large" 12 by 16 
// Define the ASCII table as Data array
// cols left to right, 0x00 is off, 0xFF is all on
// Each character is 12 bits wide, two byte height.
// NO LOWERCASE LETTERS

const  uint16_t FontLarge[59][12] = {
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, //
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39FE, 0x39FE, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // !
    {0x0000, 0x0000, 0x0000, 0x00FC, 0x00FC, 0x0000, 0x0000, 0x00FC, 0x00FC, 0x0000, 0x0000, 0x0000}, // "
    {0x0000, 0x0000, 0x0810, 0x0810, 0x7FFE, 0x0810, 0x0810, 0x7FFE, 0x0810, 0x0810, 0x0000, 0x0000}, // #
    {0x0000, 0x0000, 0x0000, 0x3070, 0x18D8, 0x3FFE, 0x1B0C, 0x0618, 0x0030, 0x0000, 0x0000, 0x0000}, // $
    {0x0000, 0x3000, 0x1800, 0x0C3E, 0x0622, 0x033E, 0x0180, 0x00C0, 0x3E60, 0x2230, 0x3E18, 0x0000}, // %
    {0X0000, 0x007f, 0x007f, 0x006b, 0x0063, 0x0068, 0x0078, 0x0078, 0x0000, 0x0000, 0x0000, 0X0000}, // &
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x003F, 0x003F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // '
    {0x0000, 0x0000, 0x1FFC, 0x3FFE, 0x2002, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // (
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2002, 0x3FFE, 0x1FFC, 0x0000, 0x0000}, // )
    {0x0000, 0x18C6, 0x0CCC, 0x06D8, 0x03F0, 0x7FFE, 0x7FFE, 0x03F0, 0x06D8, 0x0CCC, 0x18C6, 0x0000}, // *
    {0x0000, 0x0380, 0x0380, 0x0380, 0x7FFE, 0x7FFE, 0x7FFE, 0x0380, 0x0380, 0x0380, 0x0000, 0x0000}, // +
    {0x0000, 0x0000, 0x0000, 0x4000, 0x6000, 0x7E00, 0x7F00, 0x0380, 0x0000, 0x0000, 0x0000, 0x0000}, // ,
    {0x0000, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x03C0, 0x0000}, // -
    {0x0000, 0x0000, 0x0000, 0x7F00, 0x7F00, 0x7F00, 0x7F00, 0x7F00, 0x0000, 0x0000, 0x0000, 0x0000}, // .
    {0x0000, 0x7000, 0x3800, 0x1C00, 0x0E00, 0x0700, 0x0380, 0x01C0, 0x00E0, 0x0070, 0x0038, 0x0000}, // /
    {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3103, 0x3083, 0x3043, 0x3023, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 0
    {0x0000, 0x0000, 0x000C, 0x000C, 0x3006, 0x3006, 0x3FFF, 0x3FFF, 0x3FFF, 0x3000, 0x3000, 0x0000}, // 1
    {0x0000, 0x0000, 0x0000, 0x3FC3, 0x3FC3, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x30FF, 0x30FF, 0x0000}, // 2
    {0x0000, 0x0000, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 3
    {0x0000, 0x0000, 0x00FF, 0x00FF, 0x00C0, 0x00C0, 0x00C0, 0x00C0, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 4
    {0x0000, 0x0000, 0x30FF, 0x30FF, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x3FC3, 0x3FC3, 0x0000, 0x0000}, // 5
    {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x3FC3, 0x3FC3, 0x0000, 0x0000}, // 6
    {0x0000, 0x0000, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 7
    {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 8
    {0x0000, 0x0000, 0x30FF, 0x30FF, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x3FFF, 0x3FFF, 0x0000, 0x0000}, // 9
    {0x0000, 0x0000, 0x0000, 0x0000, 0x3E3E, 0x3E3E, 0x3E3E, 0x3E3E, 0x0000, 0x0000, 0x0000, 0x0000}, // :
    {0x0000, 0x0000, 0x0000, 0x3000, 0x1E3E, 0x0E3E, 0x063E, 0x023E, 0x0000, 0x0000, 0x0000, 0x0000}, // ;
    {0x0180, 0x0660, 0x0C30, 0x1818, 0x300C, 0x6006, 0x4002, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}, // <
    {0x0000, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0198, 0x0000}, // =
    {0x0000, 0x0000, 0x0000, 0x0000, 0x6006, 0x6006, 0x300C, 0x1818, 0x0C30, 0x0660, 0x0180, 0x0000}, // >
    {0x0000, 0x0018, 0x0018, 0x000C, 0x0006, 0x6706, 0x6706, 0x07FE, 0x00FE, 0x0000, 0x0000, 0x0000}, // ?
    {0x0000, 0x1F00, 0x3FF0, 0x307C, 0x27CE, 0x26C6, 0x06C6, 0x06C6, 0x0606, 0x07FE, 0x07FE, 0x0000}, // @
    {0x0000, 0x3FFE, 0x3FFF, 0x3FFF, 0x01C3, 0x01C3, 0x01C3, 0x01C3, 0x3FFF, 0x3FFF, 0x3FFE, 0x0000}, // A
    {0x0000, 0x2002, 0x3003, 0x3003, 0x3FFF, 0x3FFF, 0x30C3, 0x30C3, 0x3FFF, 0x3FFF, 0x3FFE, 0x0000}, // B
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3807, 0x3807, 0x3807, 0x3807, 0x3807, 0x3003, 0x0000, 0x0000}, // C
    {0x0000, 0x1806, 0x3807, 0x3807, 0x3FFF, 0x3FFF, 0x3807, 0x3807, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000}, // D
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x38C7, 0x38C7, 0x38C7, 0x38C7, 0x3807, 0x3003, 0x0000, 0x0000}, // E
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x01C7, 0x00C7, 0x00C7, 0x00C7, 0x0047, 0x0003, 0x0000, 0x0000}, // F
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3807, 0x3807, 0x3987, 0x3987, 0x3987, 0x3F87, 0x1F03, 0x0000}, // G
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x00E0, 0x00E0, 0x00E0, 0x00E0, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // H
    {0x0000, 0x1806, 0x3807, 0x3807, 0x3807, 0x3FFF, 0x3FFF, 0x3807, 0x3807, 0x3807, 0x1806, 0x0000}, // I
    {0x0000, 0x1FC0, 0x3FC0, 0x3C00, 0x3800, 0x3800, 0x3800, 0x3800, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // J
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x01C0, 0x01C0, 0x01E0, 0x0330, 0x0618, 0x0C0C, 0x1806, 0x0000}, // K
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3C00, 0x3800, 0x3800, 0x3800, 0x3800, 0x3800, 0x3800, 0x3000}, // L
    {0x0000, 0x1FFE, 0x3FFF, 0x1FFF, 0x000E, 0x0078, 0x0078, 0x000E, 0x1FFF, 0x3FFF, 0x1FFE, 0x0000}, // M
    {0x0000, 0x1FFE, 0x3FFF, 0x1FFF, 0x003E, 0x00F0, 0x03C0, 0x0780, 0x1FFF, 0x3FFF, 0x1FFE, 0x0000}, // N
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3C0F, 0x3807, 0x3807, 0x3C0F, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // O
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x01C7, 0x00C7, 0x00C7, 0x00C7, 0x00FF, 0x00FF, 0x00FE, 0x0000}, // P
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3C0F, 0x3987, 0x3B07, 0x3E0F, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // Q
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x03C7, 0x06C7, 0x0CC7, 0x18C7, 0x30FF, 0x007E, 0x0000, 0x0000}, // R
    {0x0000, 0x187E, 0x38FF, 0x38FF, 0x38C7, 0x38C7, 0x38C7, 0x3FC7, 0x3FC7, 0x1FC6, 0x0000, 0x0000}, // S
    {0x0000, 0x0003, 0x0007, 0x0007, 0x0007, 0x1FFF, 0x1FFF, 0x0007, 0x0007, 0x0007, 0x0003, 0x0000}, // T
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x3C00, 0x3800, 0x3800, 0x3C00, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // U
    {0x0000, 0x000F, 0x003F, 0x01FC, 0x03C0, 0x1E00, 0x1E00, 0x0FC0, 0x01FC, 0x003F, 0x000F, 0x0000}, // V
    {0x0000, 0x1FFE, 0x3FFF, 0x3FFF, 0x1E00, 0x07C0, 0x07C0, 0x1E00, 0x3FFF, 0x3FFF, 0x1FFE, 0x0000}, // W
    {0x0000, 0x0E07, 0x070E, 0x039C, 0x01F8, 0x01F0, 0x01F0, 0x01DC, 0x038E, 0x0707, 0x0E03, 0x0000}, // X
    {0x0000, 0x007E, 0x20FF, 0x30FF, 0x30E0, 0x30C0, 0x30C0, 0x30E0, 0x3FFE, 0x3FFF, 0x1FFE, 0x0000}, // Y
    {0x0000, 0x1C06, 0x3E07, 0x3F07, 0x3B87, 0x39C7, 0x38E7, 0x3877, 0x383F, 0x381F, 0x180E, 0x0000} // Z
};
#endif //end of wide

#ifdef NOKIA5110_FONT_HomeSpun

// ASCII font file : Homespun FONT 7 by 8
// added v2.3

const unsigned char FontHomeSpun[95][7] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //
    {0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00}, // !
    {0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, // "
    {0x14, 0x7f, 0x14, 0x7f, 0x14, 0x00, 0x00}, // #
    {0x6f, 0x49, 0xc9, 0x7b, 0x00, 0x00, 0x00}, // $
    {0x63, 0x13, 0x08, 0x64, 0x63, 0x00, 0x00}, // %
    {0x7f, 0xc9, 0x49, 0x63, 0x00, 0x00, 0x00}, // &
    {0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00}, // '
    {0x3e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00}, // (
    {0x41, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00}, // )
    {0x0a, 0x04, 0x1f, 0x04, 0x0a, 0x00, 0x00}, // *
    {0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00}, // +
    {0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00}, // ,
    {0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}, // -
    {0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00}, // .
    {0x60, 0x10, 0x08, 0x04, 0x03, 0x00, 0x00}, // /
    {0x7f, 0x41, 0x41, 0x7f, 0x00, 0x00, 0x00}, // 0
    {0x01, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00}, // 1
    {0x7b, 0x49, 0x49, 0x6f, 0x00, 0x00, 0x00}, // 2
    {0x63, 0x49, 0x49, 0x7f, 0x00, 0x00, 0x00}, // 3
    {0x0f, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x00}, // 4
    {0x6f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00}, // 5
    {0x7f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00}, // 6
    {0x03, 0x01, 0x01, 0x7f, 0x00, 0x00, 0x00}, // 7
    {0x7f, 0x49, 0x49, 0x7f, 0x00, 0x00, 0x00}, // 8
    {0x0f, 0x09, 0x09, 0x7f, 0x00, 0x00, 0x00}, // 9
    {0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00}, // :
    {0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00}, // ;
    {0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00}, // <
    {0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00}, // =
    {0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00}, // >
    {0x03, 0x59, 0x09, 0x0f, 0x00, 0x00, 0x00}, // ?
    {0x7f, 0x41, 0x5d, 0x55, 0x5f, 0x00, 0x00}, // @
    {0x7f, 0x09, 0x09, 0x7f, 0x00, 0x00, 0x00}, // A
    {0x7f, 0x49, 0x49, 0x77, 0x00, 0x00, 0x00}, // B
    {0x7f, 0x41, 0x41, 0x63, 0x00, 0x00, 0x00}, // C
    {0x7f, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x00}, // D
    {0x7f, 0x49, 0x49, 0x63, 0x00, 0x00, 0x00}, // E
    {0x7f, 0x09, 0x09, 0x03, 0x00, 0x00, 0x00}, // F
    {0x7f, 0x41, 0x49, 0x7b, 0x00, 0x00, 0x00}, // G
    {0x7f, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x00}, // H
    {0x41, 0x7f, 0x41, 0x00, 0x00, 0x00, 0x00}, // I
    {0x60, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00}, // J
    {0x7f, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00}, // K
    {0x7f, 0x40, 0x40, 0x60, 0x00, 0x00, 0x00}, // L
    {0x7f, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x7f}, // M
    {0x7f, 0x01, 0x01, 0x7f, 0x00, 0x00, 0x00}, // N
    {0x7f, 0x41, 0x41, 0x7f, 0x00, 0x00, 0x00}, // O
    {0x7f, 0x09, 0x09, 0x0f, 0x00, 0x00, 0x00}, // P
    {0x7f, 0x41, 0xc1, 0x7f, 0x00, 0x00, 0x00}, // Q
    {0x7f, 0x09, 0x09, 0x77, 0x00, 0x00, 0x00}, // R
    {0x6f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00}, // S
    {0x01, 0x01, 0x7f, 0x01, 0x01, 0x00, 0x00}, // T
    {0x7f, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00}, // U
    {0x7f, 0x20, 0x10, 0x0f, 0x00, 0x00, 0x00}, // V
    {0x7f, 0x40, 0x40, 0x7f, 0x40, 0x40, 0x7f}, // W
    {0x77, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00}, // X
    {0x6f, 0x48, 0x48, 0x7f, 0x00, 0x00, 0x00}, // Y
    {0x71, 0x49, 0x49, 0x47, 0x00, 0x00, 0x00}, // Z
    {0x7f, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00}, // [
    {0x03, 0x04, 0x08, 0x10, 0x60, 0x00, 0x00}, // "\"
    {0x41, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00}, // ]
    {0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00}, // ^
    {0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00}, // _
    {0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // `
    {0x74, 0x54, 0x54, 0x7c, 0x00, 0x00, 0x00}, // a
    {0x7f, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00}, // b
    {0x7c, 0x44, 0x44, 0x6c, 0x00, 0x00, 0x00}, // c
    {0x7c, 0x44, 0x44, 0x7f, 0x00, 0x00, 0x00}, // d
    {0x7c, 0x54, 0x54, 0x5c, 0x00, 0x00, 0x00}, // e
    {0x7f, 0x05, 0x05, 0x01, 0x00, 0x00, 0x00}, // f
    {0xbc, 0xa4, 0xa4, 0xfc, 0x00, 0x00, 0x00}, // g
    {0x7f, 0x04, 0x04, 0x7c, 0x00, 0x00, 0x00}, // h
    {0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // i
    {0x80, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00}, // j
    {0x7f, 0x04, 0x04, 0x7a, 0x00, 0x00, 0x00}, // k
    {0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // l
    {0x7c, 0x04, 0x04, 0x7c, 0x04, 0x04, 0x7c}, // m
    {0x7c, 0x04, 0x04, 0x7c, 0x00, 0x00, 0x00}, // n
    {0x7c, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00}, // o
    {0xfc, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00}, // p
    {0x7c, 0x44, 0x44, 0xfc, 0x00, 0x00, 0x00}, // q
    {0x7c, 0x04, 0x04, 0x0c, 0x00, 0x00, 0x00}, // r
    {0x5c, 0x54, 0x54, 0x74, 0x00, 0x00, 0x00}, // s
    {0x7f, 0x44, 0x44, 0x60, 0x00, 0x00, 0x00}, // t
    {0x7c, 0x40, 0x40, 0x7c, 0x00, 0x00, 0x00}, // u
    {0x7c, 0x20, 0x10, 0x0c, 0x00, 0x00, 0x00}, // v
    {0x7c, 0x40, 0x40, 0x7c, 0x40, 0x40, 0x7c}, // w
    {0x6c, 0x10, 0x10, 0x6c, 0x00, 0x00, 0x00}, // x
    {0xbc, 0xa0, 0xa0, 0xfc, 0x00, 0x00, 0x00}, // y
    {0x64, 0x54, 0x54, 0x4c, 0x00, 0x00, 0x00}, // z
    {0x08, 0x3e, 0x41, 0x00, 0x00, 0x00, 0x00}, // {
    {0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // |
    {0x41, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x00}, // }
    {0x1c, 0x04, 0x1c, 0x10, 0x1c, 0x00, 0x00} // ~
};

#endif //end of homespun font
#ifdef NOKIA5110_FONT_Glyphs_LCD
const unsigned char Glyphs_LCD_font[256][6] = {
         {0x00, 0x00, 0x00, 0x00, 0x00, 0x00} // 00 null char
        ,{0x00, 0x7F, 0x41, 0x5D, 0x5D, 0x41} // 01 battery indicator / progress bar, left segment, with mark
        ,{0x5D, 0x5D, 0x41, 0x5D, 0x5D, 0x41} // 02 battery indicator / progress bar, middle segment, with two marks
        ,{0x5D, 0x5D, 0x41, 0x7F, 0x1C, 0x00} // 03 battery indicator, right segment, with mark
        ,{0x5D, 0x5D, 0x41, 0x7F, 0x00, 0x00} // 04 progress bar, right segment, with mark
        ,{0x5D, 0x5D, 0x41, 0x41, 0x41, 0x41} // 05 battery indicator / progress bar, middle segment, with one mark
        ,{0x00, 0x7F, 0x41, 0x41, 0x41, 0x41} // 06 battery indicator / progress bar, left segment, no marks
        ,{0x41, 0x41, 0x41, 0x41, 0x41, 0x41} // 07 battery indicator / progress bar, middle segment, no marks
        ,{0x41, 0x41, 0x41, 0x7F, 0x1C, 0x00} // 08 battery indicator, right segment, no marks
        ,{0x41, 0x41, 0x41, 0x7F, 0x00, 0x00} // 09 progress bar, right segment, no marks
        ,{0x00, 0x00, 0x00, 0x00, 0x00, 0x00} // 0A RESERVED FOR NEWLINE
        ,{0x0E, 0x01, 0x74, 0x01, 0x0E, 0x00} // 0B wireless indicator
        ,{0x30, 0x48, 0x4D, 0x33, 0x07, 0x00} // 0C male
        ,{0x26, 0x29, 0x79, 0x29, 0x26, 0x00} // 0D female
        ,{0x60, 0x7F, 0x05, 0x65, 0x7F, 0x00} // 0E musical note
        ,{0x2A, 0x1C, 0x77, 0x1C, 0x2A, 0x00} // 0F solar symbol
        ,{0x08, 0x08, 0x3E, 0x1C, 0x08, 0x00} // 10 right arrow with tail
        ,{0x08, 0x1C, 0x3E, 0x08, 0x08, 0x00} // 11 left arrow with tail
        ,{0x04, 0x06, 0x7F, 0x06, 0x04, 0x00} // 12 up arrow with tail
        ,{0x10, 0x30, 0x7F, 0x30, 0x10, 0x00} // 13 down arrow with tail
        ,{0x14, 0x36, 0x7F, 0x36, 0x14, 0x00} // 14 up + down arror with joined tails
        ,{0x00, 0x3E, 0x1C, 0x08, 0x00, 0x00} // 15 right arrow
        ,{0x00, 0x08, 0x1C, 0x3E, 0x00, 0x00} // 16 left arrow
        ,{0x20, 0x30, 0x38, 0x30, 0x20, 0x00} // 17 up arrow
        ,{0x08, 0x18, 0x38, 0x18, 0x08, 0x00} // 18 down arrow
        ,{0x3E, 0x1C, 0x08, 0x00, 0x3E, 0x00} // 19 fast forward
        ,{0x3E, 0x00, 0x08, 0x1C, 0x3E, 0x00} // 1A rewind
        ,{0x3E, 0x3E, 0x00, 0x3E, 0x3E, 0x00} // 1B pause
        ,{0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x00} // 1C stop
        ,{0x70, 0x5F, 0x75, 0x00, 0x00, 0x00} // 1D key
        ,{0x18, 0x24, 0x24, 0x18, 0x00, 0x00} // 1E bullet, not selected
        ,{0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00} // 1F bullet, selected
        ,{0x00, 0x00, 0x00, 0x00, 0x00, 0x00} // 20 space
        ,{0x00, 0x00, 0x6F, 0x00, 0x00, 0x00} // 21 !
        ,{0x00, 0x07, 0x00, 0x07, 0x00, 0x00} // 22 "
        ,{0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00} // 23 #
        ,{0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00} // 24 $
        ,{0x23, 0x13, 0x08, 0x64, 0x62, 0x00} // 25 %
        ,{0x36, 0x49, 0x56, 0x20, 0x50, 0x00} // 26 &
        ,{0x00, 0x00, 0x07, 0x00, 0x00, 0x00} // 27 '
        ,{0x00, 0x1C, 0x22, 0x41, 0x00, 0x00} // 28 (
        ,{0x00, 0x41, 0x22, 0x1C, 0x00, 0x00} // 29 )
        ,{0x14, 0x08, 0x3E, 0x08, 0x14, 0x00} // 2A *
        ,{0x08, 0x08, 0x3E, 0x08, 0x08, 0x00} // 2B +
        ,{0x00, 0x50, 0x30, 0x00, 0x00, 0x00} // 2C ,
        ,{0x08, 0x08, 0x08, 0x08, 0x08, 0x00} // 2D -
        ,{0x00, 0x60, 0x60, 0x00, 0x00, 0x00} // 2E .
        ,{0x20, 0x10, 0x08, 0x04, 0x02, 0x00} // 2F /
        ,{0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00} // 30 0
        ,{0x00, 0x42, 0x7F, 0x40, 0x00, 0x00} // 31 1
        ,{0x42, 0x61, 0x51, 0x49, 0x46, 0x00} // 32 2
        ,{0x21, 0x41, 0x45, 0x4B, 0x31, 0x00} // 33 3
        ,{0x18, 0x14, 0x12, 0x7F, 0x10, 0x00} // 34 4
        ,{0x27, 0x45, 0x45, 0x45, 0x39, 0x00} // 35 5
        ,{0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00} // 36 6
        ,{0x01, 0x71, 0x09, 0x05, 0x03, 0x00} // 37 7
        ,{0x36, 0x49, 0x49, 0x49, 0x36, 0x00} // 38 8
        ,{0x06, 0x49, 0x49, 0x29, 0x1E, 0x00} // 39 9
        ,{0x00, 0x36, 0x36, 0x00, 0x00, 0x00} // 3A :
        ,{0x00, 0x56, 0x36, 0x00, 0x00, 0x00} // 3B ;
        ,{0x08, 0x14, 0x22, 0x41, 0x00, 0x00} // 3C <
        ,{0x14, 0x14, 0x14, 0x14, 0x14, 0x00} // 3D =
        ,{0x00, 0x41, 0x22, 0x14, 0x08, 0x00} // 3E >
        ,{0x02, 0x01, 0x51, 0x09, 0x06, 0x00} // 3F ?
        ,{0x3E, 0x41, 0x5D, 0x49, 0x4E, 0x00} // 40 @
        ,{0x7E, 0x09, 0x09, 0x09, 0x7E, 0x00} // 41 A
        ,{0x7F, 0x49, 0x49, 0x49, 0x36, 0x00} // 42 B
        ,{0x3E, 0x41, 0x41, 0x41, 0x22, 0x00} // 43 C
        ,{0x7F, 0x41, 0x41, 0x41, 0x3E, 0x00} // 44 D
        ,{0x7F, 0x49, 0x49, 0x49, 0x41, 0x00} // 45 E
        ,{0x7F, 0x09, 0x09, 0x09, 0x01, 0x00} // 46 F
        ,{0x3E, 0x41, 0x49, 0x49, 0x7A, 0x00} // 47 G
        ,{0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00} // 48 H
        ,{0x00, 0x41, 0x7F, 0x41, 0x00, 0x00} // 49 I
        ,{0x20, 0x40, 0x41, 0x3F, 0x01, 0x00} // 4A J
        ,{0x7F, 0x08, 0x14, 0x22, 0x41, 0x00} // 4B K
        ,{0x7F, 0x40, 0x40, 0x40, 0x40, 0x00} // 4C L
        ,{0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00} // 4D M
        ,{0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00} // 4E N
        ,{0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00} // 4F O
        ,{0x7F, 0x09, 0x09, 0x09, 0x06, 0x00} // 50 P
        ,{0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00} // 51 Q
        ,{0x7F, 0x09, 0x19, 0x29, 0x46, 0x00} // 52 R
        ,{0x46, 0x49, 0x49, 0x49, 0x31, 0x00} // 53 S
        ,{0x01, 0x01, 0x7F, 0x01, 0x01, 0x00} // 54 T
        ,{0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00} // 55 U
        ,{0x0F, 0x30, 0x40, 0x30, 0x0F, 0x00} // 56 V
        ,{0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00} // 57 W
        ,{0x63, 0x14, 0x08, 0x14, 0x63, 0x00} // 58 X
        ,{0x07, 0x08, 0x70, 0x08, 0x07, 0x00} // 59 Y
        ,{0x61, 0x51, 0x49, 0x45, 0x43, 0x00} // 5A Z
        ,{0x00, 0x7F, 0x41, 0x00, 0x00, 0x00} // 5B [
        ,{0x02, 0x04, 0x08, 0x10, 0x20, 0x00} // 5C backslash
        ,{0x00, 0x41, 0x7F, 0x00, 0x00, 0x00} // 5D ]
        ,{0x04, 0x02, 0x01, 0x02, 0x04, 0x00} // 5E ^
        ,{0x40, 0x40, 0x40, 0x40, 0x40, 0x00} // 5F _
        ,{0x00, 0x00, 0x03, 0x04, 0x00, 0x00} // 60 `
        ,{0x20, 0x54, 0x54, 0x54, 0x78, 0x00} // 61 a
        ,{0x7F, 0x48, 0x44, 0x44, 0x38, 0x00} // 62 b
        ,{0x38, 0x44, 0x44, 0x44, 0x20, 0x00} // 63 c
        ,{0x38, 0x44, 0x44, 0x48, 0x7F, 0x00} // 64 d
        ,{0x38, 0x54, 0x54, 0x54, 0x18, 0x00} // 65 e
        ,{0x08, 0x7E, 0x09, 0x01, 0x02, 0x00} // 66 f
        ,{0x0C, 0x52, 0x52, 0x52, 0x3E, 0x00} // 67 g
        ,{0x7F, 0x08, 0x04, 0x04, 0x78, 0x00} // 68 h
        ,{0x00, 0x44, 0x7D, 0x40, 0x00, 0x00} // 69 i
        ,{0x00, 0x20, 0x40, 0x44, 0x3D, 0x00} // 6A j
        ,{0x00, 0x7F, 0x10, 0x28, 0x44, 0x00} // 6B k
        ,{0x00, 0x41, 0x7F, 0x40, 0x00, 0x00} // 6C l
        ,{0x7C, 0x04, 0x18, 0x04, 0x78, 0x00} // 6D m
        ,{0x7C, 0x08, 0x04, 0x04, 0x78, 0x00} // 6E n
        ,{0x38, 0x44, 0x44, 0x44, 0x38, 0x00} // 6F o
        ,{0x7C, 0x14, 0x14, 0x14, 0x08, 0x00} // 70 p
        ,{0x08, 0x14, 0x14, 0x18, 0x7C, 0x00} // 71 q
        ,{0x7C, 0x08, 0x04, 0x04, 0x08, 0x00} // 72 r
        ,{0x48, 0x54, 0x54, 0x54, 0x20, 0x00} // 73 s
        ,{0x04, 0x3F, 0x44, 0x40, 0x20, 0x00} // 74 t
        ,{0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00} // 75 u
        ,{0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00} // 76 v
        ,{0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00} // 77 w
        ,{0x44, 0x28, 0x10, 0x28, 0x44, 0x00} // 78 x
        ,{0x0C, 0x50, 0x50, 0x50, 0x3C, 0x00} // 79 y
        ,{0x44, 0x64, 0x54, 0x4C, 0x44, 0x00} // 7A z
        ,{0x00, 0x08, 0x36, 0x41, 0x41, 0x00} // 7B {
        ,{0x00, 0x00, 0x7F, 0x00, 0x00, 0x00} // 7C |
        ,{0x41, 0x41, 0x36, 0x08, 0x00, 0x00} // 7D }
        ,{0x04, 0x02, 0x04, 0x08, 0x04, 0x00} // 7E ~
        ,{0x40, 0x00, 0x40, 0x00, 0x40, 0x00} // 7F ellipses
        ,{0x78, 0x14, 0x16, 0x15, 0x78, 0x00} // 80 A acute
        ,{0x78, 0x16, 0x15, 0x16, 0x78, 0x00} // 81 A circumflex
        ,{0x78, 0x15, 0x16, 0x14, 0x78, 0x00} // 82 A grave
        ,{0x78, 0x15, 0x14, 0x15, 0x78, 0x00} // 83 A umlaut
        ,{0x78, 0x16, 0x15, 0x16, 0x79, 0x00} // 84 A tilde
        ,{0x70, 0x2A, 0x2D, 0x2A, 0x70, 0x00} // 85 A ring
        ,{0x20, 0x54, 0x56, 0x55, 0x78, 0x00} // 86 a acute
        ,{0x20, 0x56, 0x55, 0x56, 0x78, 0x00} // 87 a circumflex
        ,{0x20, 0x55, 0x56, 0x54, 0x78, 0x00} // 88 a grave
        ,{0x20, 0x55, 0x54, 0x55, 0x78, 0x00} // 89 a umlaut
        ,{0x20, 0x56, 0x55, 0x56, 0x79, 0x00} // 8A a tilde
        ,{0x20, 0x57, 0x55, 0x57, 0x78, 0x00} // 8B a ring
        ,{0x7C, 0x54, 0x56, 0x55, 0x44, 0x00} // 8C E acute
        ,{0x7C, 0x56, 0x55, 0x56, 0x44, 0x00} // 8D E circumflex
        ,{0x7C, 0x55, 0x56, 0x54, 0x44, 0x00} // 8E E grave
        ,{0x7C, 0x55, 0x54, 0x55, 0x44, 0x00} // 8F E umlaut
        ,{0x38, 0x54, 0x56, 0x55, 0x18, 0x00} // 90 e acute
        ,{0x38, 0x56, 0x55, 0x56, 0x18, 0x00} // 91 e circumflex
        ,{0x38, 0x55, 0x56, 0x54, 0x18, 0x00} // 92 e grave
        ,{0x38, 0x55, 0x54, 0x55, 0x18, 0x00} // 93 e umlaut
        ,{0x00, 0x48, 0x7A, 0x49, 0x00, 0x00} // 94 I acute
        ,{0x00, 0x4A, 0x79, 0x4A, 0x00, 0x00} // 95 I circumflex
        ,{0x00, 0x49, 0x7A, 0x48, 0x00, 0x00} // 96 I grave
        ,{0x00, 0x49, 0x78, 0x49, 0x00, 0x00} // 97 I umlaut
        ,{0x00, 0x48, 0x7A, 0x41, 0x00, 0x00} // 98 i acute
        ,{0x00, 0x4A, 0x79, 0x42, 0x00, 0x00} // 99 i circumflex
        ,{0x00, 0x49, 0x7A, 0x40, 0x00, 0x00} // 9A i grave
        ,{0x00, 0x49, 0x78, 0x41, 0x00, 0x00} // 9B i umlaut
        ,{0x38, 0x44, 0x46, 0x45, 0x38, 0x00} // 9C O acute
        ,{0x38, 0x46, 0x45, 0x46, 0x38, 0x00} // 9D O circumflex
        ,{0x38, 0x45, 0x46, 0x44, 0x38, 0x00} // 9E O grave
        ,{0x38, 0x45, 0x44, 0x45, 0x38, 0x00} // 9F O umlaut
        ,{0x38, 0x46, 0x45, 0x46, 0x39, 0x00} // A0 O tilde
        ,{0x30, 0x48, 0x4A, 0x49, 0x30, 0x00} // A1 o acute
        ,{0x30, 0x4A, 0x49, 0x4A, 0x30, 0x00} // A2 o circumflex
        ,{0x30, 0x49, 0x4A, 0x48, 0x30, 0x00} // A3 o grave
        ,{0x30, 0x49, 0x48, 0x49, 0x30, 0x00} // A4 o umlaut
        ,{0x30, 0x4A, 0x49, 0x4A, 0x31, 0x00} // A5 o tilde
        ,{0x3C, 0x40, 0x42, 0x41, 0x3C, 0x00} // A6 U acute
        ,{0x38, 0x42, 0x41, 0x42, 0x38, 0x00} // A7 U circumflex
        ,{0x3C, 0x41, 0x42, 0x40, 0x3C, 0x00} // A8 U grave
        ,{0x3C, 0x41, 0x40, 0x41, 0x3C, 0x00} // A9 U umlaut
        ,{0x38, 0x40, 0x42, 0x21, 0x78, 0x00} // AA u acute
        ,{0x38, 0x42, 0x41, 0x22, 0x78, 0x00} // AB u circumflex
        ,{0x38, 0x41, 0x42, 0x20, 0x78, 0x00} // AC u grave
        ,{0x38, 0x41, 0x40, 0x21, 0x78, 0x00} // AD u umlaut
        ,{0x0C, 0x10, 0x62, 0x11, 0x0C, 0x00} // AE Y acute
        ,{0x0C, 0x50, 0x52, 0x51, 0x3C, 0x00} // AF y acute
        ,{0x0C, 0x51, 0x50, 0x51, 0x3C, 0x00} // B0 y umlaut
        ,{0x4E, 0x51, 0x71, 0x11, 0x0A, 0x00} // B1 C cedilla
        ,{0x58, 0x64, 0x64, 0x24, 0x10, 0x00} // B2 c cedilla
        ,{0x7C, 0x0A, 0x11, 0x22, 0x7D, 0x00} // B3 N tilde
        ,{0x78, 0x12, 0x09, 0x0A, 0x71, 0x00} // B4 n tilde
        ,{0x7C, 0x0A, 0x09, 0x7F, 0x49, 0x00} // B5 AE (ash) uppercase
        ,{0x20, 0x54, 0x7C, 0x54, 0x58, 0x00} // B6 ae (ash) lowercase
        ,{0x7E, 0x01, 0x49, 0x59, 0x36, 0x00} // B7 eszett
        ,{0x08, 0x7F, 0x49, 0x41, 0x3E, 0x00} // B8 eth uppercase
        ,{0x00, 0x70, 0x55, 0x52, 0x7D, 0x00} // B9 eth lowercase
        ,{0x3E, 0x61, 0x5D, 0x43, 0x3E, 0x00} // BA slashed O
        ,{0x38, 0x64, 0x54, 0x4C, 0x38, 0x00} // BB shashed o
        ,{0x7F, 0x12, 0x12, 0x12, 0x0C, 0x00} // BC thorn uppercase
        ,{0x7F, 0x24, 0x24, 0x18, 0x00, 0x00} // BD thorn lowercase
        ,{0x30, 0x48, 0x45, 0x40, 0x20, 0x00} // BE upside-down question mark
        ,{0x00, 0x00, 0x7B, 0x00, 0x00, 0x00} // BF upside-down exclamation mark
        ,{0x08, 0x14, 0x2A, 0x14, 0x22, 0x00} // C0 left double guillemet
        ,{0x22, 0x14, 0x2A, 0x14, 0x08, 0x00} // C1 right double guillemet
        ,{0x26, 0x29, 0x29, 0x2F, 0x28, 0x00} // C2 ordinal a
        ,{0x26, 0x29, 0x29, 0x26, 0x00, 0x00} // C3 ordinal o
        ,{0x18, 0x24, 0x66, 0x24, 0x00, 0x00} // C4 cent symbol
        ,{0x48, 0x7E, 0x49, 0x4A, 0x60, 0x00} // C5 pound symbol
        ,{0x14, 0x3E, 0x55, 0x41, 0x22, 0x00} // C6 euro symbol
        ,{0x2B, 0x2C, 0x78, 0x2C, 0x2B, 0x00} // C7 yuan/yen symbol
        ,{0x7C, 0x20, 0x20, 0x1C, 0x20, 0x00} // C8 micro (lowercase mu)
        ,{0x44, 0x7C, 0x04, 0x7C, 0x44, 0x00} // C9 pi lowercase
        ,{0x4E, 0x71, 0x01, 0x71, 0x4E, 0x00} // CA omega uppercase
        ,{0x3F, 0x21, 0x2D, 0x2D, 0x3F, 0x00} // CB copyright symbol
        ,{0x3F, 0x21, 0x35, 0x29, 0x3F, 0x00} // CC registered trademark symbol
        ,{0x00, 0x00, 0x01, 0x1F, 0x01, 0x00} // CD trademark left side glyph
        ,{0x00, 0x00, 0x17, 0x15, 0x1D, 0x00} // CE service mark left side glyph
        ,{0x1F, 0x01, 0x1F, 0x01, 0x1F, 0x00} // CF trademark/service mark right side glyph
        ,{0x00, 0x07, 0x05, 0x07, 0x00, 0x00} // D0 degree symbol
        ,{0x00, 0x48, 0x5C, 0x48, 0x00, 0x00} // D1 +/-
        ,{0x51, 0x4A, 0x4A, 0x44, 0x44, 0x00} // D2 >=
        ,{0x44, 0x44, 0x4A, 0x4A, 0x51, 0x00} // D3 <=
        ,{0x00, 0x55, 0x00, 0xAA, 0x00, 0x55} // D4 dithered pattern, light
        ,{0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA} // D5 dithered pattern, medium
        ,{0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA} // D6 dithered pattern, dark
        ,{0x00, 0x00, 0xFF, 0x00, 0x00, 0x00} // D7 vertical line segment
        ,{0x08, 0x08, 0x08, 0x08, 0x08, 0x08} // D8 horizontal line segment
        ,{0x00, 0x00, 0xF8, 0x08, 0x08, 0x08} // D9 top left corner segment
        ,{0x08, 0x08, 0xF8, 0x08, 0x08, 0x08} // DA horizontal line segment with downwards extension
        ,{0x08, 0x08, 0xF8, 0x00, 0x00, 0x00} // DB top right corner segment
        ,{0x00, 0x00, 0xFF, 0x08, 0x08, 0x08} // DC vertical line segment with right extension
        ,{0x08, 0x08, 0xFF, 0x08, 0x08, 0x08} // DD four-way intersecting segment
        ,{0x08, 0x08, 0xFF, 0x00, 0x00, 0x00} // DE vertical line segment with left extension
        ,{0x00, 0x00, 0x0F, 0x08, 0x08, 0x08} // DF bottom left corner segment
        ,{0x08, 0x08, 0x0F, 0x08, 0x08, 0x08} // E0 horizontal line segment with upwards extension
        ,{0x08, 0x08, 0x0F, 0x00, 0x00, 0x00} // E1 bottom right corner segment
        ,{0x00, 0x12, 0x1F, 0x10, 0x00, 0x00} // E2 superscript 1
        ,{0x00, 0x1D, 0x15, 0x17, 0x00, 0x00} // E3 superscript 2
        ,{0x00, 0x15, 0x15, 0x1F, 0x00, 0x00} // E4 superscript 3
        ,{0x00, 0x07, 0x04, 0x1F, 0x00, 0x00} // E5 superscript 4
        ,{0x00, 0x17, 0x15, 0x1D, 0x00, 0x00} // E6 superscript 5
        ,{0x00, 0x1F, 0x14, 0x1C, 0x00, 0x00} // E7 superscript 6
        ,{0x00, 0x01, 0x01, 0x1F, 0x00, 0x00} // E8 superscript 7
        ,{0x00, 0x1F, 0x15, 0x1F, 0x00, 0x00} // E9 superscript 8
        ,{0x00, 0x07, 0x05, 0x1F, 0x00, 0x00} // EA superscript 9
        ,{0x00, 0x1F, 0x11, 0x1F, 0x00, 0x00} // EB superscript 0
        ,{0x04, 0x06, 0xF7, 0x06, 0x04, 0x00} // EC vertical scrollbar up arrow
        ,{0x20, 0x60, 0xEF, 0x60, 0x20, 0x00} // ED vertical scrollbar down arrow
        ,{0x03, 0x03, 0xFF, 0x03, 0x03, 0x00} // EE vertical scrollbar indicator, upper position
        ,{0x18, 0x18, 0xFF, 0x18, 0x18, 0x00} // EF vertical scrollbar indicator, mid position
        ,{0xC0, 0xC0, 0xFF, 0xC0, 0xC0, 0x00} // F0 vertical scrollbar indicator, lower position
        ,{0x08, 0x1C, 0x3E, 0x00, 0x08, 0x08} // F1 horizontal scrollbar left arrow
        ,{0x08, 0x08, 0x00, 0x3E, 0x1C, 0x08} // F2 horizontal scrollbar right arrow
        ,{0x3E, 0x3E, 0x08, 0x08, 0x08, 0x08} // F3 horizontal scrollbar indicator, left position
        ,{0x08, 0x08, 0x3E, 0x3E, 0x08, 0x08} // F4 horizontal scrollbar indicator, mid position
        ,{0x08, 0x08, 0x08, 0x08, 0x3E, 0x3E} // F5 horizontal scrollbar indicator, right position
        ,{0x3C, 0x24, 0x24, 0x3C, 0x00, 0x00} // F6 checkbox, not selected
        ,{0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00} // F7 checkbox, selected
        ,{0x7F, 0x00, 0x00, 0x00, 0x7F, 0x00} // F8 double bar
        ,{0x63, 0x75, 0x79, 0x75, 0x63, 0x00} // F9 hourglass
        ,{0x08, 0x08, 0x2A, 0x08, 0x08, 0x00} // FA division symbol
        ,{0x63, 0x55, 0x49, 0x41, 0x41, 0x00} // FB summation symbol
        ,{0x60, 0x40, 0x7F, 0x01, 0x03, 0x00} // FC integration symbol (single-line)
        ,{0x00, 0x00, 0xFF, 0x01, 0x03, 0x00} // FD integration symbol top (multi-line)
        ,{0x60, 0x40, 0x7F, 0x00, 0x00, 0x00} // FE integration symbol bottom (multi-line)
        ,{0x70, 0x4C, 0x43, 0x4C, 0x70, 0x00} // FF delta
    };

#endif NOKIA5110_FONT_Glyphs_LCD

#ifdef NOKIA5110_FONT_Bold_LCD
// ASCII font file : Homespun FONT 7 by 8
// added v2.3
const unsigned char Bold_LCD_Font[59][7] = {        
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00}, //  
	{0x5f,0x5f,0x00,0x00,0x00,0x00,0x00}, // !
	{0x07,0x07,0x00,0x07,0x07,0x00,0x00}, // "
	{0x14,0x7f,0x7f,0x14,0x7f,0x7f,0x14}, // #
	{0x6f,0x6f,0x6b,0xeb,0x6b,0x7b,0x7b}, // $
	{0x63,0x73,0x38,0x1c,0x0e,0x67,0x63}, // %
	{0x7f,0x7f,0x6b,0x63,0x68,0x78,0x78}, // &
	{0x07,0x07,0x00,0x00,0x00,0x00,0x00}, // '
	{0xff,0xff,0x80,0x00,0x00,0x00,0x00}, // (
	{0x80,0xff,0xff,0x00,0x00,0x00,0x00}, // )
	{0x36,0x08,0x7f,0x7f,0x7f,0x08,0x36}, // *
	{0x08,0x08,0x3e,0x08,0x08,0x00,0x00}, // +
	{0xe0,0xe0,0x00,0x00,0x00,0x00,0x00}, // ,
	{0x08,0x08,0x08,0x08,0x08,0x00,0x00}, // -
	{0x60,0x60,0x00,0x00,0x00,0x00,0x00}, // .
	{0x70,0x1c,0x07,0x00,0x00,0x00,0x00}, // /
	{0x7f,0x7f,0x63,0x63,0x63,0x7f,0x7f}, // 0
	{0x60,0x66,0x66,0x7f,0x7f,0x60,0x60}, // 1
	{0x7b,0x7b,0x6b,0x6b,0x6b,0x6f,0x6f}, // 2
	{0x63,0x63,0x6b,0x6b,0x6b,0x7f,0x7f}, // 3
	{0x1f,0x1f,0x18,0x18,0x18,0x7e,0x7e}, // 4
	{0x6f,0x6f,0x6b,0x6b,0x6b,0x7b,0x7b}, // 5
	{0x7f,0x7f,0x6c,0x6c,0x6c,0x7c,0x7c}, // 6
	{0x43,0x63,0x73,0x3b,0x1f,0x0f,0x07}, // 7
	{0x7f,0x7f,0x6b,0x6b,0x6b,0x7f,0x7f}, // 8
	{0x1f,0x1f,0x1b,0x1b,0x1b,0x7f,0x7f}, // 9
	{0x6c,0x6c,0x00,0x00,0x00,0x00,0x00}, // :
	{0xec,0xec,0x00,0x00,0x00,0x00,0x00}, // ;
	{0x08,0x14,0x22,0x22,0x00,0x00,0x00}, // <
	{0x14,0x14,0x14,0x14,0x14,0x00,0x00}, // =
	{0x22,0x22,0x14,0x08,0x00,0x00,0x00}, // >
	{0x03,0x03,0x5b,0x5b,0x0b,0x0f,0x0f}, // ?
	{0x7f,0x7f,0x63,0x6f,0x6b,0x6f,0x6f}, // @
	{0x7f,0x7f,0x1b,0x1b,0x1b,0x7f,0x7f}, // A
	{0x7f,0x7f,0x6b,0x6b,0x6f,0x7e,0x7c}, // B
	{0x7f,0x7f,0x63,0x63,0x63,0x63,0x63}, // C
	{0x7f,0x7f,0x63,0x63,0x67,0x7e,0x7c}, // D
	{0x7f,0x7f,0x6b,0x6b,0x6b,0x6b,0x6b}, // E
	{0x7f,0x7f,0x0b,0x0b,0x0b,0x03,0x03}, // F
	{0x7f,0x7f,0x63,0x63,0x6b,0x7b,0x7b}, // G
	{0x7f,0x7f,0x18,0x18,0x18,0x7f,0x7f}, // H
	{0x63,0x63,0x7f,0x7f,0x63,0x63,0x63}, // I
	{0x60,0x60,0x60,0x60,0x60,0x7f,0x3f}, // J
	{0x7f,0x7f,0x18,0x18,0x1e,0x7f,0x79}, // K
	{0x7f,0x7f,0x60,0x60,0x60,0x60,0x60}, // L
	{0x7f,0x7f,0x03,0x06,0x03,0x7f,0x7f}, // M
	{0x7f,0x7f,0x0e,0x1c,0x38,0x7f,0x7f}, // N
	{0x7f,0x7f,0x63,0x63,0x63,0x7f,0x7f}, // O
	{0x7f,0x7f,0x1b,0x1b,0x1b,0x1f,0x1f}, // P
	{0x7f,0x7f,0x63,0xf3,0xf3,0x7f,0x7f}, // Q
	{0x7f,0x7f,0x1b,0x3b,0x7b,0x7f,0x5f}, // R
	{0x6f,0x6f,0x6b,0x6b,0x6b,0x7b,0x7b}, // S
	{0x03,0x03,0x7f,0x7f,0x03,0x03,0x03}, // T
	{0x7f,0x7f,0x60,0x60,0x60,0x7f,0x7f}, // U
	{0x1f,0x3f,0x70,0x60,0x70,0x3f,0x1f}, // V
	{0x3f,0x7f,0x60,0x30,0x60,0x7f,0x3f}, // W
	{0x77,0x7f,0x1c,0x08,0x1c,0x7f,0x77}, // X
	{0x07,0x0f,0x7c,0x78,0x7c,0x0f,0x07}, // Y
	{0x73,0x7b,0x6b,0x6b,0x6b,0x6f,0x67}, // Z
};

#endif NOKIA5110_FONT_Bold_LCD

#ifdef NOKIA5110_FONT_Small_LCD
 const unsigned char Small_LCD_font[96][3] = {
        // First 32 characters (0x00-0x19) are ignored. These are
        // non-displayable, control characters.
				//Font table:
			  //This table contains the hex values that represent pixels for a
				//font that is 5 pixels wide and 8 pixels high. Each byte in a row
				//represents one, 8-pixel, vertical column of a character. 3 bytes
				//per character. 
        {0x00,0x00,0x00}, //  
        {0x00,0x2e,0x00}, // !
        {0x06,0x00,0x06}, // "
        {0x3e,0x14,0x3e}, // #
        {0x0c,0x36,0x18}, // $
        {0x32,0x08,0x26}, // %
        {0x14,0x2a,0x34}, // &
        {0x00,0x06,0x00}, // '
        {0x00,0x1c,0x22}, // (
        {0x22,0x1c,0x00}, // )
        {0x14,0x08,0x14}, // *
        {0x08,0x1c,0x08}, // +
        {0x40,0x60,0x00}, // ,
        {0x08,0x08,0x08}, // -
        {0x00,0x20,0x00}, // .
        {0x60,0x1c,0x02}, // /
        {0x3e,0x22,0x3e}, // 0
        {0x24,0x3e,0x20}, // 1
        {0x32,0x2a,0x26}, // 2
        {0x22,0x2a,0x3e}, // 3
        {0x0e,0x08,0x3e}, // 4
        {0x2e,0x2a,0x3a}, // 5
        {0x3e,0x2a,0x3a}, // 6
        {0x02,0x3a,0x06}, // 7
        {0x3e,0x2a,0x3e}, // 8
        {0x2e,0x2a,0x3e}, // 9
        {0x00,0x14,0x00}, // :
        {0x40,0x64,0x00}, // ;
        {0x08,0x14,0x22}, // <
        {0x14,0x14,0x14}, // =
        {0x22,0x14,0x08}, // >
        {0x02,0x2a,0x06}, // ?
        {0x3e,0x22,0x2e}, // @
        {0x3e,0x0a,0x3e}, // A
        {0x3e,0x2a,0x36}, // B
        {0x3e,0x22,0x22}, // C
        {0x3e,0x22,0x1c}, // D
        {0x3e,0x2a,0x22}, // E
        {0x3e,0x0a,0x02}, // F
        {0x3e,0x22,0x3a}, // G
        {0x3e,0x08,0x3e}, // H
        {0x22,0x3e,0x22}, // I
        {0x30,0x20,0x3e}, // J
        {0x3e,0x08,0x36}, // K
        {0x3e,0x20,0x20}, // L
        {0x3e,0x04,0x3e}, // M
        {0x3c,0x08,0x1e}, // N
        {0x3e,0x22,0x3e}, // O
        {0x3e,0x0a,0x0e}, // P
        {0x3e,0x22,0x7e}, // Q
        {0x3e,0x0a,0x34}, // R
        {0x2e,0x2a,0x3a}, // S
        {0x02,0x3e,0x02}, // T
        {0x3e,0x20,0x3e}, // U
        {0x1e,0x20,0x1e}, // V
        {0x3e,0x10,0x3e}, // W
        {0x36,0x08,0x36}, // X
        {0x06,0x38,0x06}, // Y
        {0x32,0x2a,0x26}, // Z
        {0x00,0x3e,0x22}, // [
        {0x02,0x1c,0x60}, // "\"
        {0x22,0x3e,0x00}, // ]
        {0x04,0x02,0x04}, // ^
        {0x40,0x40,0x40}, // _
        {0x00,0x02,0x00}, // `
        {0x3e,0x0a,0x3e}, // a
        {0x3e,0x2a,0x36}, // b
        {0x3e,0x22,0x22}, // c
        {0x3e,0x22,0x1c}, // d
        {0x3e,0x2a,0x22}, // e
        {0x3e,0x0a,0x02}, // f
        {0x3e,0x22,0x3a}, // g
        {0x3e,0x08,0x3e}, // h
        {0x22,0x3e,0x22}, // i
        {0x30,0x20,0x3e}, // j
        {0x3e,0x08,0x36}, // k
        {0x3e,0x20,0x20}, // l
        {0x3e,0x04,0x3e}, // m
        {0x3c,0x08,0x1e}, // n
        {0x3e,0x22,0x3e}, // o
        {0x3e,0x0a,0x0e}, // p
        {0x3e,0x22,0x7e}, // q
        {0x3e,0x0a,0x34}, // r
        {0x2e,0x2a,0x3a}, // s
        {0x02,0x3e,0x02}, // t
        {0x3e,0x20,0x3e}, // u
        {0x1e,0x20,0x1e}, // v
        {0x3e,0x10,0x3e}, // w
        {0x36,0x08,0x36}, // x
        {0x06,0x38,0x06}, // y
        {0x32,0x2a,0x26}, // z
        {0x08,0x3e,0x22}, // {
        {0x00,0x7e,0x00}, // |
        {0x22,0x3e,0x08}, // }
        {0x02,0x06,0x04}, // ~
        {0x00,0x00,0x00}
    };
#endif NOKIA5110_FONT_Small_LCD

#ifdef NOKIA5110_FONT_Terminal6x8

//
//  Terminal6.h
//  Font library
//  ----------------------------------
//  Developed with embedXcode
//
//  Project LCD BoosterPack
//  Created by Rei VILO on 26/05/12
//  Copyright (c) 2012 http://embeddedcomputing.weebly.com
//  Licence CC = BY SA NC
//

//
// WARNING: This Font is usable only with MikroE GLCD Lib.
//          X-GLCD Lib does not handle this font.
//
// Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
// MikroeElektronika 2011 http://www.mikroe.com 
//
// GLCD FontName : Terminal6x8
// GLCD FontSize : 5 x 8
//

static const unsigned char Terminal6x8[96][5] = {
  {0x00, 0x00, 0x00, 0x00, 0x00},      // Code for char  
  {0x00, 0x06, 0x5F, 0x06, 0x00},      // Code for char !
  {0x07, 0x03, 0x00, 0x07, 0x03},      // Code for char "
  {0x24, 0x7E, 0x24, 0x7E, 0x24},      // Code for char #
  {0x24, 0x2B, 0x6A, 0x12, 0x00},      // Code for char $
  {0x63, 0x13, 0x08, 0x64, 0x63},      // Code for char %
  {0x36, 0x49, 0x56, 0x20, 0x50},      // Code for char &
  {0x00, 0x07, 0x03, 0x00, 0x00},      // Code for char '
  {0x00, 0x3E, 0x41, 0x00, 0x00},      // Code for char (
  {0x00, 0x41, 0x3E, 0x00, 0x00},      // Code for char )
  {0x08, 0x3E, 0x1C, 0x3E, 0x08},      // Code for char *
  {0x08, 0x08, 0x3E, 0x08, 0x08},      // Code for char +
  {0x00, 0xE0, 0x60, 0x00, 0x00},      // Code for char ,
  {0x08, 0x08, 0x08, 0x08, 0x08},      // Code for char -
  {0x00, 0x60, 0x60, 0x00, 0x00},      // Code for char .
  {0x20, 0x10, 0x08, 0x04, 0x02},      // Code for char /
  {0x3E, 0x51, 0x49, 0x45, 0x3E},      // Code for char 0
  {0x00, 0x42, 0x7F, 0x40, 0x00},      // Code for char 1
  {0x62, 0x51, 0x49, 0x49, 0x46},      // Code for char 2
  {0x22, 0x49, 0x49, 0x49, 0x36},      // Code for char 3
  {0x18, 0x14, 0x12, 0x7F, 0x10},      // Code for char 4
  {0x2F, 0x49, 0x49, 0x49, 0x31},      // Code for char 5
  {0x3C, 0x4A, 0x49, 0x49, 0x30},      // Code for char 6
  {0x01, 0x71, 0x09, 0x05, 0x03},      // Code for char 7
  {0x36, 0x49, 0x49, 0x49, 0x36},      // Code for char 8
  {0x06, 0x49, 0x49, 0x29, 0x1E},      // Code for char 9
  {0x00, 0x6C, 0x6C, 0x00, 0x00},      // Code for char :
  {0x00, 0xEC, 0x6C, 0x00, 0x00},      // Code for char ;
  {0x08, 0x14, 0x22, 0x41, 0x00},      // Code for char <
  {0x24, 0x24, 0x24, 0x24, 0x24},      // Code for char =
  {0x00, 0x41, 0x22, 0x14, 0x08},      // Code for char >
  {0x02, 0x01, 0x59, 0x09, 0x06},      // Code for char ?
  {0x3E, 0x41, 0x5D, 0x55, 0x1E},      // Code for char @
  {0x7E, 0x11, 0x11, 0x11, 0x7E},      // Code for char A
  {0x7F, 0x49, 0x49, 0x49, 0x36},      // Code for char B
  {0x3E, 0x41, 0x41, 0x41, 0x22},      // Code for char C
  {0x7F, 0x41, 0x41, 0x41, 0x3E},      // Code for char D
  {0x7F, 0x49, 0x49, 0x49, 0x41},      // Code for char E
  {0x7F, 0x09, 0x09, 0x09, 0x01},      // Code for char F
  {0x3E, 0x41, 0x49, 0x49, 0x7A},      // Code for char G
  {0x7F, 0x08, 0x08, 0x08, 0x7F},      // Code for char H
  {0x00, 0x41, 0x7F, 0x41, 0x00},      // Code for char I
  {0x30, 0x40, 0x40, 0x40, 0x3F},      // Code for char J
  {0x7F, 0x08, 0x14, 0x22, 0x41},      // Code for char K
  {0x7F, 0x40, 0x40, 0x40, 0x40},      // Code for char L
  {0x7F, 0x02, 0x04, 0x02, 0x7F},      // Code for char M
  {0x7F, 0x02, 0x04, 0x08, 0x7F},      // Code for char N
  {0x3E, 0x41, 0x41, 0x41, 0x3E},      // Code for char O
  {0x7F, 0x09, 0x09, 0x09, 0x06},      // Code for char P
  {0x3E, 0x41, 0x51, 0x21, 0x5E},      // Code for char Q
  {0x7F, 0x09, 0x09, 0x19, 0x66},      // Code for char R
  {0x26, 0x49, 0x49, 0x49, 0x32},      // Code for char S
  {0x01, 0x01, 0x7F, 0x01, 0x01},      // Code for char T
  {0x3F, 0x40, 0x40, 0x40, 0x3F},      // Code for char U
  {0x1F, 0x20, 0x40, 0x20, 0x1F},      // Code for char V
  {0x3F, 0x40, 0x3C, 0x40, 0x3F},      // Code for char W
  {0x63, 0x14, 0x08, 0x14, 0x63},      // Code for char X
  {0x07, 0x08, 0x70, 0x08, 0x07},      // Code for char Y
  {0x71, 0x49, 0x45, 0x43, 0x00},      // Code for char Z
  {0x00, 0x7F, 0x41, 0x41, 0x00},      // Code for char [
  {0x02, 0x04, 0x08, 0x10, 0x20},      // Code for <BackSlash>
  {0x00, 0x41, 0x41, 0x7F, 0x00},      // Code for char ]
  {0x04, 0x02, 0x01, 0x02, 0x04},      // Code for char ^
  {0x80, 0x80, 0x80, 0x80, 0x80},      // Code for char _
  {0x00, 0x03, 0x07, 0x00, 0x00},      // Code for char `
  {0x20, 0x54, 0x54, 0x54, 0x78},      // Code for char a
  {0x7F, 0x44, 0x44, 0x44, 0x38},      // Code for char b
  {0x38, 0x44, 0x44, 0x44, 0x28},      // Code for char c
  {0x38, 0x44, 0x44, 0x44, 0x7F},      // Code for char d
  {0x38, 0x54, 0x54, 0x54, 0x08},      // Code for char e
  {0x08, 0x7E, 0x09, 0x09, 0x00},      // Code for char f
  {0x18, 0xA4, 0xA4, 0xA4, 0x7C},      // Code for char g
  {0x7F, 0x04, 0x04, 0x78, 0x00},      // Code for char h
  {0x00, 0x00, 0x7D, 0x40, 0x00},      // Code for char i
  {0x40, 0x80, 0x84, 0x7D, 0x00},      // Code for char j
  {0x7F, 0x10, 0x28, 0x44, 0x00},      // Code for char k
  {0x00, 0x00, 0x7F, 0x40, 0x00},      // Code for char l
  {0x7C, 0x04, 0x18, 0x04, 0x78},      // Code for char m
  {0x7C, 0x04, 0x04, 0x78, 0x00},      // Code for char n
  {0x38, 0x44, 0x44, 0x44, 0x38},      // Code for char o
  {0xFC, 0x44, 0x44, 0x44, 0x38},      // Code for char p
  {0x38, 0x44, 0x44, 0x44, 0xFC},      // Code for char q
  {0x44, 0x78, 0x44, 0x04, 0x08},      // Code for char r
  {0x08, 0x54, 0x54, 0x54, 0x20},      // Code for char s
  {0x04, 0x3E, 0x44, 0x24, 0x00},      // Code for char t
  {0x3C, 0x40, 0x20, 0x7C, 0x00},      // Code for char u
  {0x1C, 0x20, 0x40, 0x20, 0x1C},      // Code for char v
  {0x3C, 0x60, 0x30, 0x60, 0x3C},      // Code for char w
  {0x6C, 0x10, 0x10, 0x6C, 0x00},      // Code for char x
  {0x9C, 0xA0, 0x60, 0x3C, 0x00},      // Code for char y
  {0x64, 0x54, 0x54, 0x4C, 0x00},      // Code for char z
  {0x08, 0x3E, 0x41, 0x41, 0x00},      // Code for char {
  {0x00, 0x00, 0x77, 0x00, 0x00},      // Code for char |
  {0x00, 0x41, 0x41, 0x3E, 0x08},      // Code for char }
  {0x02, 0x01, 0x02, 0x01, 0x00},      // Code for char ~
  {0x06, 0x09, 0x09, 0x06, 0x00}       // Code for <Degrees>
};

#endif NOKIA5110_FONT_Terminal6x8

#ifdef NOKIA5110_FONT_Terminal11x16
//
//  Terminal12.h
//  Font library
//  ----------------------------------
//  Developed with embedXcode http://embedXcode.weebly.com
//
//  Project LCD BoosterPack
//  Created by Rei VILO on 26/05/12
//  Copyright (c) 2012 http://embeddedcomputing.weebly.com
//  Licence CC = BY SA NC
//

//
// WARNING: This Font Require X-GLCD Lib.
//          You can not use it with MikroE GLCD Lib.
//
// Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
// MikroElektronika 2011 http://www.mikroe.com 
//
// GLCD FontName : Terminal11x16
// GLCD FontSize : 11 x 16
//

static const unsigned char Terminal11x16[96][22] = {
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char  
  {0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0xFF,0x33,0xFF,0x33,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char !
  {0x00,0x00,0x00,0x00,0x3C,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char "
  {0x00,0x02,0x10,0x1E,0x90,0x1F,0xF0,0x03,0x7E,0x02,0x1E,0x1E,0x90,0x1F,0xF0,0x03,0x7E,0x02,0x1E,0x00,0x10,0x00}, // Code for char #
  {0x00,0x00,0x78,0x04,0xFC,0x0C,0xCC,0x0C,0xFF,0x3F,0xFF,0x3F,0xCC,0x0C,0xCC,0x0F,0x88,0x07,0x00,0x00,0x00,0x00}, // Code for char $
  {0x00,0x30,0x38,0x38,0x38,0x1C,0x38,0x0E,0x00,0x07,0x80,0x03,0xC0,0x01,0xE0,0x38,0x70,0x38,0x38,0x38,0x1C,0x00}, // Code for char %
  {0x00,0x00,0x00,0x1F,0xB8,0x3F,0xFC,0x31,0xC6,0x21,0xE2,0x37,0x3E,0x1E,0x1C,0x1C,0x00,0x36,0x00,0x22,0x00,0x00}, // Code for char &
  {0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x00,0x3F,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char '
  {0x00,0x00,0x00,0x00,0xF0,0x03,0xFC,0x0F,0xFE,0x1F,0x07,0x38,0x01,0x20,0x01,0x20,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char (
  {0x00,0x00,0x00,0x00,0x01,0x20,0x01,0x20,0x07,0x38,0xFE,0x1F,0xFC,0x0F,0xF0,0x03,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char )
  {0x00,0x00,0x98,0x0C,0xB8,0x0E,0xE0,0x03,0xF8,0x0F,0xF8,0x0F,0xE0,0x03,0xB8,0x0E,0x98,0x0C,0x00,0x00,0x00,0x00}, // Code for char *
  {0x00,0x00,0x80,0x01,0x80,0x01,0x80,0x01,0xF0,0x0F,0xF0,0x0F,0x80,0x01,0x80,0x01,0x80,0x01,0x00,0x00,0x00,0x00}, // Code for char +
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB8,0x00,0xF8,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char ,
  {0x00,0x00,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x00,0x00,0x00,0x00}, // Code for char -
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x38,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char .
  {0x00,0x18,0x00,0x1C,0x00,0x0E,0x00,0x07,0x80,0x03,0xC0,0x01,0xE0,0x00,0x70,0x00,0x38,0x00,0x1C,0x00,0x0E,0x00}, // Code for char /
  {0xF8,0x07,0xFE,0x1F,0x06,0x1E,0x03,0x33,0x83,0x31,0xC3,0x30,0x63,0x30,0x33,0x30,0x1E,0x18,0xFE,0x1F,0xF8,0x07}, // Code for char 0
  {0x00,0x00,0x00,0x00,0x0C,0x30,0x0C,0x30,0x0E,0x30,0xFF,0x3F,0xFF,0x3F,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x00}, // Code for char 1
  {0x1C,0x30,0x1E,0x38,0x07,0x3C,0x03,0x3E,0x03,0x37,0x83,0x33,0xC3,0x31,0xE3,0x30,0x77,0x30,0x3E,0x30,0x1C,0x30}, // Code for char 2
  {0x0C,0x0C,0x0E,0x1C,0x07,0x38,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xE7,0x39,0x7E,0x1F,0x3C,0x0E}, // Code for char 3
  {0xC0,0x03,0xE0,0x03,0x70,0x03,0x38,0x03,0x1C,0x03,0x0E,0x03,0x07,0x03,0xFF,0x3F,0xFF,0x3F,0x00,0x03,0x00,0x03}, // Code for char 4
  {0x3F,0x0C,0x7F,0x1C,0x63,0x38,0x63,0x30,0x63,0x30,0x63,0x30,0x63,0x30,0x63,0x30,0xE3,0x38,0xC3,0x1F,0x83,0x0F}, // Code for char 5
  {0xC0,0x0F,0xF0,0x1F,0xF8,0x39,0xDC,0x30,0xCE,0x30,0xC7,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x39,0x80,0x1F,0x00,0x0F}, // Code for char 6
  {0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x30,0x03,0x3C,0x03,0x0F,0xC3,0x03,0xF3,0x00,0x3F,0x00,0x0F,0x00,0x03,0x00}, // Code for char 7
  {0x00,0x0F,0xBC,0x1F,0xFE,0x39,0xE7,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xE7,0x30,0xFE,0x39,0xBC,0x1F,0x00,0x0F}, // Code for char 8
  {0x3C,0x00,0x7E,0x00,0xE7,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x38,0xC3,0x1C,0xC3,0x0E,0xE7,0x07,0xFE,0x03,0xFC,0x00}, // Code for char 9
  {0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x1C,0x70,0x1C,0x70,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char :
  {0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x9C,0x70,0xFC,0x70,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char ;
  {0x00,0x00,0xC0,0x00,0xE0,0x01,0xF0,0x03,0x38,0x07,0x1C,0x0E,0x0E,0x1C,0x07,0x38,0x03,0x30,0x00,0x00,0x00,0x00}, // Code for char <
  {0x00,0x00,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x60,0x06,0x00,0x00}, // Code for char =
  {0x00,0x00,0x03,0x30,0x07,0x38,0x0E,0x1C,0x1C,0x0E,0x38,0x07,0xF0,0x03,0xE0,0x01,0xC0,0x00,0x00,0x00,0x00,0x00}, // Code for char >
  {0x1C,0x00,0x1E,0x00,0x07,0x00,0x03,0x00,0x83,0x37,0xC3,0x37,0xE3,0x00,0x77,0x00,0x3E,0x00,0x1C,0x00,0x00,0x00}, // Code for char ?
  {0xF8,0x0F,0xFE,0x1F,0x07,0x18,0xF3,0x33,0xFB,0x37,0x1B,0x36,0xFB,0x37,0xFB,0x37,0x07,0x36,0xFE,0x03,0xF8,0x01}, // Code for char @
  {0x00,0x38,0x00,0x3F,0xE0,0x07,0xFC,0x06,0x1F,0x06,0x1F,0x06,0xFC,0x06,0xE0,0x07,0x00,0x3F,0x00,0x38,0x00,0x00}, // Code for char A
  {0xFF,0x3F,0xFF,0x3F,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xE7,0x30,0xFE,0x39,0xBC,0x1F,0x00,0x0F,0x00,0x00}, // Code for char B
  {0xF0,0x03,0xFC,0x0F,0x0E,0x1C,0x07,0x38,0x03,0x30,0x03,0x30,0x03,0x30,0x07,0x38,0x0E,0x1C,0x0C,0x0C,0x00,0x00}, // Code for char C
  {0xFF,0x3F,0xFF,0x3F,0x03,0x30,0x03,0x30,0x03,0x30,0x03,0x30,0x07,0x38,0x0E,0x1C,0xFC,0x0F,0xF0,0x03,0x00,0x00}, // Code for char D
  {0xFF,0x3F,0xFF,0x3F,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0x03,0x30,0x03,0x30,0x00,0x00}, // Code for char E
  {0xFF,0x3F,0xFF,0x3F,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0xC3,0x00,0x03,0x00,0x03,0x00,0x00,0x00}, // Code for char F
  {0xF0,0x03,0xFC,0x0F,0x0E,0x1C,0x07,0x38,0x03,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC7,0x3F,0xC6,0x3F,0x00,0x00}, // Code for char G
  {0xFF,0x3F,0xFF,0x3F,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xFF,0x3F,0xFF,0x3F,0x00,0x00}, // Code for char H
  {0x00,0x00,0x00,0x00,0x03,0x30,0x03,0x30,0xFF,0x3F,0xFF,0x3F,0x03,0x30,0x03,0x30,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char I
  {0x00,0x0E,0x00,0x1E,0x00,0x38,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x38,0xFF,0x1F,0xFF,0x07,0x00,0x00}, // Code for char J
  {0xFF,0x3F,0xFF,0x3F,0xC0,0x00,0xE0,0x01,0xF0,0x03,0x38,0x07,0x1C,0x0E,0x0E,0x1C,0x07,0x38,0x03,0x30,0x00,0x00}, // Code for char K
  {0xFF,0x3F,0xFF,0x3F,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x00}, // Code for char L
  {0xFF,0x3F,0xFF,0x3F,0x1E,0x00,0x78,0x00,0xE0,0x01,0xE0,0x01,0x78,0x00,0x1E,0x00,0xFF,0x3F,0xFF,0x3F,0x00,0x00}, // Code for char M
  {0xFF,0x3F,0xFF,0x3F,0x0E,0x00,0x38,0x00,0xF0,0x00,0xC0,0x03,0x00,0x07,0x00,0x1C,0xFF,0x3F,0xFF,0x3F,0x00,0x00}, // Code for char N
  {0xF0,0x03,0xFC,0x0F,0x0E,0x1C,0x07,0x38,0x03,0x30,0x03,0x30,0x07,0x38,0x0E,0x1C,0xFC,0x0F,0xF0,0x03,0x00,0x00}, // Code for char O
  {0xFF,0x3F,0xFF,0x3F,0x83,0x01,0x83,0x01,0x83,0x01,0x83,0x01,0x83,0x01,0xC7,0x01,0xFE,0x00,0x7C,0x00,0x00,0x00}, // Code for char P
  {0xF0,0x03,0xFC,0x0F,0x0E,0x1C,0x07,0x38,0x03,0x30,0x03,0x36,0x07,0x3E,0x0E,0x1C,0xFC,0x3F,0xF0,0x33,0x00,0x00}, // Code for char Q
  {0xFF,0x3F,0xFF,0x3F,0x83,0x01,0x83,0x01,0x83,0x03,0x83,0x07,0x83,0x0F,0xC7,0x1D,0xFE,0x38,0x7C,0x30,0x00,0x00}, // Code for char R
  {0x3C,0x0C,0x7E,0x1C,0xE7,0x38,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC3,0x30,0xC7,0x39,0x8E,0x1F,0x0C,0x0F,0x00,0x00}, // Code for char S
  {0x00,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0xFF,0x3F,0xFF,0x3F,0x03,0x00,0x03,0x00,0x03,0x00,0x00,0x00,0x00,0x00}, // Code for char T
  {0xFF,0x07,0xFF,0x1F,0x00,0x38,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x38,0xFF,0x1F,0xFF,0x07,0x00,0x00}, // Code for char U
  {0x07,0x00,0x3F,0x00,0xF8,0x01,0xC0,0x0F,0x00,0x3E,0x00,0x3E,0xC0,0x0F,0xF8,0x01,0x3F,0x00,0x07,0x00,0x00,0x00}, // Code for char V
  {0xFF,0x3F,0xFF,0x3F,0x00,0x1C,0x00,0x06,0x80,0x03,0x80,0x03,0x00,0x06,0x00,0x1C,0xFF,0x3F,0xFF,0x3F,0x00,0x00}, // Code for char W
  {0x03,0x30,0x0F,0x3C,0x1C,0x0E,0x30,0x03,0xE0,0x01,0xE0,0x01,0x30,0x03,0x1C,0x0E,0x0F,0x3C,0x03,0x30,0x00,0x00}, // Code for char X
  {0x03,0x00,0x0F,0x00,0x3C,0x00,0xF0,0x00,0xC0,0x3F,0xC0,0x3F,0xF0,0x00,0x3C,0x00,0x0F,0x00,0x03,0x00,0x00,0x00}, // Code for char Y
  {0x03,0x30,0x03,0x3C,0x03,0x3E,0x03,0x33,0xC3,0x31,0xE3,0x30,0x33,0x30,0x1F,0x30,0x0F,0x30,0x03,0x30,0x00,0x00}, // Code for char Z
  {0x00,0x00,0x00,0x00,0xFF,0x3F,0xFF,0x3F,0x03,0x30,0x03,0x30,0x03,0x30,0x03,0x30,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char [
  {0x0E,0x00,0x1C,0x00,0x38,0x00,0x70,0x00,0xE0,0x00,0xC0,0x01,0x80,0x03,0x00,0x07,0x00,0x0E,0x00,0x1C,0x00,0x18}, // Code for <Backslash>
  {0x00,0x00,0x00,0x00,0x03,0x30,0x03,0x30,0x03,0x30,0x03,0x30,0xFF,0x3F,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char ]
  {0x60,0x00,0x70,0x00,0x38,0x00,0x1C,0x00,0x0E,0x00,0x07,0x00,0x0E,0x00,0x1C,0x00,0x38,0x00,0x70,0x00,0x60,0x00}, // Code for char ^
  {0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0}, // Code for char _
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x7E,0x00,0x4E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char `
  {0x00,0x1C,0x40,0x3E,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0xE0,0x3F,0xC0,0x3F,0x00,0x00}, // Code for char a
  {0xFF,0x3F,0xFF,0x3F,0xC0,0x30,0x60,0x30,0x60,0x30,0x60,0x30,0x60,0x30,0xE0,0x38,0xC0,0x1F,0x80,0x0F,0x00,0x00}, // Code for char b
  {0x80,0x0F,0xC0,0x1F,0xE0,0x38,0x60,0x30,0x60,0x30,0x60,0x30,0x60,0x30,0x60,0x30,0xC0,0x18,0x80,0x08,0x00,0x00}, // Code for char c
  {0x80,0x0F,0xC0,0x1F,0xE0,0x38,0x60,0x30,0x60,0x30,0x60,0x30,0xE0,0x30,0xC0,0x30,0xFF,0x3F,0xFF,0x3F,0x00,0x00}, // Code for char d
  {0x80,0x0F,0xC0,0x1F,0xE0,0x3B,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0xC0,0x13,0x80,0x01,0x00,0x00}, // Code for char e
  {0xC0,0x00,0xC0,0x00,0xFC,0x3F,0xFE,0x3F,0xC7,0x00,0xC3,0x00,0xC3,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char f
  {0x80,0x03,0xC0,0xC7,0xE0,0xCE,0x60,0xCC,0x60,0xCC,0x60,0xCC,0x60,0xCC,0x60,0xE6,0xE0,0x7F,0xE0,0x3F,0x00,0x00}, // Code for char g
  {0xFF,0x3F,0xFF,0x3F,0xC0,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0xE0,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0x00}, // Code for char h
  {0x00,0x00,0x00,0x00,0x00,0x30,0x60,0x30,0xEC,0x3F,0xEC,0x3F,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char i
  {0x00,0x00,0x00,0x00,0x00,0x60,0x00,0xE0,0x00,0xC0,0x60,0xC0,0xEC,0xFF,0xEC,0x7F,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char j
  {0x00,0x00,0xFF,0x3F,0xFF,0x3F,0x00,0x03,0x80,0x07,0xC0,0x0F,0xE0,0x1C,0x60,0x38,0x00,0x30,0x00,0x00,0x00,0x00}, // Code for char k
  {0x00,0x00,0x00,0x00,0x00,0x30,0x03,0x30,0xFF,0x3F,0xFF,0x3F,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char l
  {0xE0,0x3F,0xC0,0x3F,0xE0,0x00,0xE0,0x00,0xC0,0x3F,0xC0,0x3F,0xE0,0x00,0xE0,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00}, // Code for char m
  {0x00,0x00,0xE0,0x3F,0xE0,0x3F,0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0xE0,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00}, // Code for char n
  {0x80,0x0F,0xC0,0x1F,0xE0,0x38,0x60,0x30,0x60,0x30,0x60,0x30,0x60,0x30,0xE0,0x38,0xC0,0x1F,0x80,0x0F,0x00,0x00}, // Code for char o
  {0xE0,0xFF,0xE0,0xFF,0x60,0x0C,0x60,0x18,0x60,0x18,0x60,0x18,0x60,0x18,0xE0,0x1C,0xC0,0x0F,0x80,0x07,0x00,0x00}, // Code for char p
  {0x80,0x07,0xC0,0x0F,0xE0,0x1C,0x60,0x18,0x60,0x18,0x60,0x18,0x60,0x18,0x60,0x0C,0xE0,0xFF,0xE0,0xFF,0x00,0x00}, // Code for char q
  {0x00,0x00,0xE0,0x3F,0xE0,0x3F,0xC0,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0x60,0x00,0xE0,0x00,0xC0,0x00,0x00,0x00}, // Code for char r
  {0xC0,0x11,0xE0,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x33,0x60,0x3F,0x40,0x1E,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char s
  {0x60,0x00,0x60,0x00,0xFE,0x1F,0xFE,0x3F,0x60,0x30,0x60,0x30,0x60,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char t
  {0xE0,0x0F,0xE0,0x1F,0x00,0x38,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x18,0xE0,0x3F,0xE0,0x3F,0x00,0x00}, // Code for char u
  {0x60,0x00,0xE0,0x01,0x80,0x07,0x00,0x1E,0x00,0x38,0x00,0x38,0x00,0x1E,0x80,0x07,0xE0,0x01,0x60,0x00,0x00,0x00}, // Code for char v
  {0xE0,0x07,0xE0,0x1F,0x00,0x38,0x00,0x1C,0xE0,0x0F,0xE0,0x0F,0x00,0x1C,0x00,0x38,0xE0,0x1F,0xE0,0x07,0x00,0x00}, // Code for char w
  {0x60,0x30,0xE0,0x38,0xC0,0x1D,0x80,0x0F,0x00,0x07,0x80,0x0F,0xC0,0x1D,0xE0,0x38,0x60,0x30,0x00,0x00,0x00,0x00}, // Code for char x
  {0x00,0x00,0x60,0x00,0xE0,0x81,0x80,0xE7,0x00,0x7E,0x00,0x1E,0x80,0x07,0xE0,0x01,0x60,0x00,0x00,0x00,0x00,0x00}, // Code for char y
  {0x60,0x30,0x60,0x38,0x60,0x3C,0x60,0x36,0x60,0x33,0xE0,0x31,0xE0,0x30,0x60,0x30,0x20,0x30,0x00,0x00,0x00,0x00}, // Code for char z
  {0x00,0x00,0x80,0x00,0xC0,0x01,0xFC,0x1F,0x7E,0x3F,0x07,0x70,0x03,0x60,0x03,0x60,0x03,0x60,0x00,0x00,0x00,0x00}, // Code for char {
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xBF,0x3F,0xBF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // Code for char |
  {0x00,0x00,0x03,0x60,0x03,0x60,0x03,0x60,0x07,0x70,0x7E,0x3F,0xFC,0x1F,0xC0,0x01,0x80,0x00,0x00,0x00,0x00,0x00}, // Code for char }
  {0x10,0x00,0x18,0x00,0x0C,0x00,0x04,0x00,0x0C,0x00,0x18,0x00,0x10,0x00,0x18,0x00,0x0C,0x00,0x04,0x00,0x00,0x00}, // Code for char ~
  {0x00,0x00,0x18,0x00,0x3C,0x00,0x66,0x00,0x66,0x00,0x3C,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}  // Code for <Degrees>
};

#endif NOKIA5110_FONT_Terminal11x16

